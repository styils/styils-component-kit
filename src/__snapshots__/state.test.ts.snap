// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`macro state react base 1`] = `
"import { useState as _useState } from "react";
export default () => {
  const [count, setCount] = _useState(0);

  return (
    <button onClick={() => setCount(count + 1)}>
      Clicked {count} {count === 1 ? "time" : "times"}
    </button>
  );
};
"
`;

exports[`macro state react hook 1`] = `
"import { useState as _useState } from "react";
export default function useHook() {
  const [v, setV] = _useState(false);

  const s = () => {
    setV(!v);
  };

  return [v, s];
}
"
`;

exports[`macro state solid base 1`] = `
"import { batch as _batch } from "solid-js";
import { createSignal as _createSignal } from "solid-js";
export default () => {
  const [count, setCount] = _createSignal(0);

  return (
    <button onClick={() => setCount(count() + 1)}>
      Clicked {count()} {count() === 1 ? "time" : "times"}
    </button>
  );
};
"
`;

exports[`macro state solid batch 1`] = `
"import { batch as _batch } from "solid-js";
import { createSignal as _createSignal } from "solid-js";
export default () => {
  const [count, setCount] = _createSignal(0);

  const onClickA = () => {
    setCount();
  };

  const onClickB = () =>
    _batch(function () {
      setCount();
      setCount();
    });

  const onClickC = (foo) =>
    _batch(function () {
      setCount(foo);
      setCount(foo);
    });

  return (
    <button
      onClick={() =>
        _batch(() => {
          setCount(count() + 1);
          setCount(count() + 1);
        })
      }
    >
      <div onClick={onClickA}></div>
      <div onClick={onClickB}></div>
      <div onClick={onClickC}></div>
      <div onClick={() => setCount(count() + 1)}></div>
      Clicked {count()} {count() === 1 ? "time" : "times"}
    </button>
  );
};
"
`;

exports[`macro state solid object 1`] = `
"import { batch as _batch } from "solid-js";
import { createSignal as _createSignal } from "solid-js";
export default () => {
  const [count, setCount] = _createSignal({
    a: 1,
    b: 2,
  });

  return (
    <button onClick={() => setCount({ ...count(), a: count().a + 1 })}>
      Clicked {count().b} {count().a === 1 ? "time" : "times"}
    </button>
  );
};
"
`;

exports[`macro state vue base 1`] = `
"import { ref as _ref } from "vue";
export default () => {
  const count = _ref(0);

  function hello() {
    let count = 1;
    count++;
  }

  return (
    <button onClick={() => (count.value = count.value + 1)}>
      Clicked {count.value} {count.value === 1 ? "time" : "times"}
    </button>
  );
};
"
`;

exports[`macro state vue state arr 1`] = `
"import { ref as _ref } from "vue";
export default () => {
  const count = _ref({
    a: 1,
  });

  const foo = _ref([1, 2, 3]);

  function hello() {
    let count = 1;
    count++;
  }

  return (
    <button onClick={() => (foo.value = [...count.value, count.value.a + 1])}>
      Clicked {count.value.a} {count.value.a === 1 ? "time" : "times"}
      {foo.value.map((i) => (
        <span>{i}</span>
      ))}
    </button>
  );
};
"
`;

exports[`macro state vue state object 1`] = `
"import { ref as _ref } from "vue";
export default () => {
  const count = _ref({
    a: 1,
  });

  const foo = _ref([1, 2, 3]);

  function hello() {
    let count = 1;
    count++;
  }

  return (
    <button
      onClick={() => {
        count.value.a = count.value.a + 1;
      }}
    >
      Clicked {count.value.a} {count.value.a === 1 ? "time" : "times"}
      {foo.value.map((i) => (
        <span>{i}</span>
      ))}
    </button>
  );
};
"
`;
